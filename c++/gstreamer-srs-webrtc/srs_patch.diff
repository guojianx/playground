commit 832d2a4e7a5754a4fcbd9fa499e6d24a435f0e45
Author: root <root@localhost.localdomain>
Date:   Sat Jan 29 16:16:50 2022 +0800

    For GStreamer WebRTC, Fix some SDP analysis issues.

diff --git a/trunk/conf/rtc.conf b/trunk/conf/rtc.conf
index b7269cb..e670aad 100644
--- a/trunk/conf/rtc.conf
+++ b/trunk/conf/rtc.conf
@@ -23,14 +23,14 @@ rtc_server {
     enabled on;
     listen 8000;
     # @see https://github.com/ossrs/srs/wiki/v4_CN_WebRTC#config-candidate
-    candidate $CANDIDATE;
+    candidate  192.168.1.248;
 }
 
 vhost __defaultVhost__ {
     rtc {
         enabled     on;
         # @see https://github.com/ossrs/srs/wiki/v4_CN_WebRTC#rtmp-to-rtc
-        rtmp_to_rtc off;
+        rtmp_to_rtc on;
         # @see https://github.com/ossrs/srs/wiki/v4_CN_WebRTC#rtc-to-rtmp
         rtc_to_rtmp off;
     }
diff --git a/trunk/src/app/srs_app_rtc_sdp.cpp b/trunk/src/app/srs_app_rtc_sdp.cpp
index fbaa701..25e5511 100644
--- a/trunk/src/app/srs_app_rtc_sdp.cpp
+++ b/trunk/src/app/srs_app_rtc_sdp.cpp
@@ -59,7 +59,7 @@ srs_error_t srs_parse_h264_fmtp(const std::string& fmtp, H264SpecificParam& h264
     std::vector<std::string> vec = split_str(fmtp, ";");
     for (size_t i = 0; i < vec.size(); ++i) {
         std::vector<std::string> kv = split_str(vec[i], "=");
-        if (kv.size() == 2) {
+        if (kv.size() >= 2) {
             if (kv[0] == "profile-level-id") {
                 h264_param.profile_level_id = kv[1];
             } else if (kv[0] == "packetization-mode") {
@@ -74,6 +74,8 @@ srs_error_t srs_parse_h264_fmtp(const std::string& fmtp, H264SpecificParam& h264
                 h264_param.packetization_mode = kv[1];
             } else if (kv[0] == "level-asymmetry-allowed") {
                 h264_param.level_asymmerty_allow = kv[1];
+            } else if (kv[0] == "sprop-parameter-sets") {
+                continue;
             } else {
                 return srs_error_new(ERROR_RTC_SDP_DECODE, "invalid h264 param=%s", kv[0].c_str());
             }
diff --git a/trunk/src/app/srs_app_rtc_source.cpp b/trunk/src/app/srs_app_rtc_source.cpp
index 3b6ff6e..e7a1b5d 100644
--- a/trunk/src/app/srs_app_rtc_source.cpp
+++ b/trunk/src/app/srs_app_rtc_source.cpp
@@ -651,8 +651,19 @@ void SrsRtcSource::set_stream_desc(SrsRtcSourceDescription* stream_desc)
     }
 }
 
+
+static inline std::string str_toupper(const std::string &str)
+{
+    size_t i = 0;
+    std::string s;
+    for (i = 0; i < str.size(); i++)
+        s[i] = std::toupper(str[i]);
+    return s;
+}
+
 std::vector<SrsRtcTrackDescription*> SrsRtcSource::get_track_desc(std::string type, std::string media_name)
 {
+    std::string name1, name2;
     std::vector<SrsRtcTrackDescription*> track_descs;
     if (!stream_desc_) {
         return track_descs;
@@ -662,7 +673,10 @@ std::vector<SrsRtcTrackDescription*> SrsRtcSource::get_track_desc(std::string ty
         if (! stream_desc_->audio_track_desc_) {
             return track_descs;
         }
-        if (stream_desc_->audio_track_desc_->media_->name_ == media_name) {
+        
+        name1 = str_toupper(stream_desc_->audio_track_desc_->media_->name_);
+        name2 = str_toupper(media_name);
+        if (name1 == name2) {
             track_descs.push_back(stream_desc_->audio_track_desc_);
         }
     }
